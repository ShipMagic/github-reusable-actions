name: Docker

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking-db)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      PROJECT_ID:
        default: 'ShipMagic'
        required: false
        type: string
      REGISTRY_LOGIN_SERVER:
        default: 'jxshipmagic.azurecr.io'
        required: false
        type: string

    secrets:
      GH_TOKEN:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:

  docker:
    timeout-minutes: 10
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      DOCKER_BUILDKIT: 1
    steps:

      - name: "‚òÅÔ∏è Checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "üîß Google Auth Token"
        if: ${{ !env.ACT }}
        id: auth-gcp-token
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: "üîß Docker Auth"
        if: ${{ !env.ACT }}
        id: auth-docker
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth-gcp-token.outputs.access_token }}'
          registry: '${{ inputs.GAR_LOCATION }}-docker.pkg.dev'  # Google Artifact Registry

# https://learn.microsoft.com/en-us/azure/container-instances/container-instances-github-action
      - name: 'üê≥ Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ inputs.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'üê≥ Docker build, tag and push'
        run: |
          docker build -f ${{ inputs.DOCKERFILE_FILE }} -t ${{ inputs.NAME }} .
          docker image tag ${{ inputs.NAME }} "${{ inputs.REGISTRY_LOGIN_SERVER }}/shipmagic/${{ inputs.NAME }}:${{ inputs.VERSION }}"
          docker push -a "${{ inputs.REGISTRY_LOGIN_SERVER }}/shipmagic/${{ inputs.NAME }}"
