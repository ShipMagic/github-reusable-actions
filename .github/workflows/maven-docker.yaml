name: Maven and Docker

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      JAVA_VERSION:
        default: '17'
        required: false
        type: string
      MVN_ARGS:
        default: 'clean install'
        required: false
        type: string
      DOCKERFILE_FILE:
        default: './Dockerfile'
        required: false
        type: string
      TAG2:
        default: 'latest'
        required: false
        type: string

    secrets:
      GH_TOKEN:
        required: true
      REGISTRY_LOGIN_SERVER:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:

  maven-docker:
    timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'read'
    runs-on: ubuntu-latest
    steps:

      - name: "‚òÅÔ∏è Checkout repository"
        uses: actions/checkout@v3

      - name: "üîß Set up JDK ${{ inputs.JAVA_VERSION }}"
        uses: actions/setup-java@v3
        with:
          java-version: '${{ inputs.JAVA_VERSION }}'
          distribution: 'temurin'

      - name: "üî® Maven set version"
        env:
          VERSION: ${{ inputs.VERSION }}
        run: mvn -B versions:set -DnewVersion=${VERSION}

      - name: "üî® Build with Maven"
        run: mvn -B ${{ inputs.MVN_ARGS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# https://learn.microsoft.com/en-us/azure/container-instances/container-instances-github-action
      - name: 'üê≥ Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build -f ${{ inputs.DOCKERFILE_FILE }} -t ${{ inputs.NAME }} .
          docker image tag ${{ inputs.NAME }} "${{ secrets.REGISTRY_LOGIN_SERVER }}/shipmagic/${{ inputs.NAME }}:${{ inputs.VERSION }}"
          docker image tag ${{ inputs.NAME }} "${{ secrets.REGISTRY_LOGIN_SERVER }}/shipmagic/${{ inputs.NAME }}:latest"
          docker push -a "${{ secrets.REGISTRY_LOGIN_SERVER }}/shipmagic/${{ inputs.NAME }}"
